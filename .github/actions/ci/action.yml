name: 'develop'
description: ''
inputs:
  aws-access-key: 
    description: 'AWS Access Key'
    required: true
  aws-secret-key:
    description: 'AWS Secret Key'
    required: true
  aws-region:
    description: 'AWS Region'
    required: true
    default: 'us-east-1'
  role-arn:
    description: 'AWS IAM Role ARN'
    required: true
    default: 'arn:aws:iam::489099442433:role/GitHubECRActionRole'
  registry:
    description: 'ECR Registry'
    required: true
    default: '489099442433.dkr.ecr.us-east-1.amazonaws.com'
  repository:
    description: 'ECR Repository'
    required: true
  tag:
    description: 'Tag'
    required: true
  dry-run:
    description: 'Flags whether to push to registry or not (yes | no) default: no'
    default: 'no'
    required: false
runs:
  using: "composite"
  steps:
    - uses: hadolint/hadolint-action@v2.0.0
      with:
        dockerfile: Dockerfile

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ inputs.aws-region }}
        aws-access-key-id: ${{ inputs.aws-access-key }}
        aws-secret-access-key: ${{ inputs.aws-secret-key }}
        role-to-assume: ${{ inputs.role-arn }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ inputs.repository }}
        IMAGE_TAG: ${{ inputs.tag }}
      shell: bash
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        if [ "${{ inputs.dry-run }}" == "yes" ]; then
          echo "Dry run, not pushing to registry"
        else
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        fi
